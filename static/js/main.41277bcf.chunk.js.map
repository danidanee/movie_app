{"version":3,"sources":["components/Movie.js","routes/Home.js","routes/About.js","routes/Detail.js","components/Navigation.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","className","to","pathname","state","src","alt","map","genre","index","key","slice","Home","isLoading","movies","getMovies","a","async","axios","get","data","setState","this","movie","medium_cover_image","React","Component","About","Detail","props","location","history","undefined","push","Navigation","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"8XAsCeA,MAjCf,YAA4D,IAA3CC,EAA0C,EAA1CA,GAAIC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,OAC/C,OACI,yBAAKC,UAAY,SACb,kBAAC,IAAD,CAAMC,GAAM,CACRC,SAAS,UAAD,OAAWR,GACnBS,MAAM,CACFR,OAAMC,QAAOC,UAASC,SAAQC,YAGtC,yBAAKK,IAAKN,EAAQO,IAAKT,EAAOA,MAAOA,IACrC,yBAAKI,UAAY,cACb,wBAAIA,UAAU,eAAeJ,GAC7B,wBAAII,UAAU,cAAcL,GAC5B,wBAAIK,UAAU,gBAAgBD,EAAOO,KAAI,SAACC,EAAOC,GAAR,OACrC,wBAAIC,IAAKD,EAAOR,UAAU,gBAAgBO,OAE9C,uBAAGP,UAAU,iBAAiBH,EAAQa,MAAM,EAAG,KAA/C,WCmCDC,G,iNAhDbR,MAAQ,CACNS,WAAY,EACZC,OAAS,I,EAIXC,UAAY,4BAAAC,EAAAC,OAAA,kEAAAD,EAAA,MAC6BE,IAAMC,IAAI,4DADvC,gBACWL,EADX,EACHM,KAAOA,KAAON,OACrB,EAAKO,SAAS,CAACP,SAAQD,WAAU,IAFvB,sC,mFAOVS,KAAKP,c,+BAGE,IAAD,EACwBO,KAAKlB,MAA3BS,EADF,EACEA,UAAWC,EADb,EACaA,OACnB,OACE,6BAASb,UAAU,aAChBY,EAEG,yBAAKZ,UAAU,UACb,0BAAMA,UAAU,eAAhB,eAGF,yBAAKA,UAAU,UAEXa,EAAOP,KAAI,SAAAgB,GAAK,OACd,kBAAC,EAAD,CACEb,IAAKa,EAAM5B,GACXA,GAAI4B,EAAM5B,GACVC,KAAM2B,EAAM3B,KACZC,MAAO0B,EAAM1B,MACbC,QAASyB,EAAMzB,QACfC,OAAQwB,EAAMC,mBACdxB,OAAQuB,EAAMvB,kB,GAtCfyB,IAAMC,Y,MCSVC,MAZf,WACI,OACI,yBAAK1B,UAAU,mBACX,8IAIA,8DCeG2B,E,4LApBS,IAAD,EACeN,KAAKO,MAA3BC,EADO,EACPA,SAAUC,EADH,EACGA,aAGIC,IAAnBF,EAAS1B,OACR2B,EAAQE,KAAK,O,+BAKX,IACEH,EAAaR,KAAKO,MAAlBC,SACR,OAAIA,EAAS1B,MACJ,8BAAO0B,EAAS1B,MAAMP,OAEtB,S,GAlBI4B,IAAMC,W,MCYZQ,MAVf,WACI,OAEI,yBAAKjC,UAAU,OACX,kBAAC,IAAD,CAAMC,GAAG,KAAT,QACA,kBAAC,IAAD,CAAMA,GAAG,UAAT,W,MCUGiC,MAXf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAW1B,IACxC,kBAAC,IAAD,CAAOwB,KAAK,SAASE,UAAWX,IAChC,kBAAC,IAAD,CAAOS,KAAK,aAAaE,UAAWV,MCP1CW,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.41277bcf.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({ id, year, title, summary, poster, genres}){\r\n    return(\r\n        <div className = \"movie\">\r\n            <Link to = {{\r\n                pathname:`/movie/${id}`,\r\n                state:{\r\n                    year, title, summary, poster, genres\r\n                }\r\n            }}>\r\n            <img src={poster} alt={title} title={title}/>\r\n            <div className = \"movie_data\">\r\n                <h3 className=\"movie_title\">{title}</h3>\r\n                <h5 className=\"movie_year\">{year}</h5>\r\n                <ul className=\"movie_genres\">{genres.map((genre, index) => (\r\n                    <li key={index} className=\"genres_genre\">{genre}</li>\r\n                ))}</ul>\r\n                <p className=\"movie_summary\">{summary.slice(0, 180)}...</p>\r\n                    \r\n            </div>\r\n            </Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nMovie.propTypes = {\r\n    id : PropTypes.number.isRequired,\r\n    year : PropTypes.number.isRequired,\r\n    title : PropTypes.string.isRequired,\r\n    summary : PropTypes.string.isRequired,\r\n    poster : PropTypes.string.isRequired,\r\n    genres : PropTypes.arrayOf(PropTypes.string).isRequired\r\n}\r\n\r\nexport default Movie;","import React from 'react';\r\nimport axios from \"axios\";\r\nimport Movie from \"../components/Movie\";\r\nimport \"./Home.css\";\r\n\r\n// state class component를 사용해야된다\r\nclass Home extends React.Component{\r\n  \r\n  state = {\r\n    isLoading : true,\r\n    movies : []\r\n  };\r\n\r\n  // 비동기방식, 다 될때까지 기다린다.\r\n  getMovies = async() => {\r\n    const {data: {data: {movies}}} = await axios.get(\"http://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\r\n    this.setState({movies, isLoading:false});\r\n  }\r\n  \r\n  // 제일 먼저 실행되는 라이프 사이클\r\n  componentDidMount(){\r\n    this.getMovies();\r\n  }\r\n\r\n  render(){\r\n    const { isLoading, movies } = this.state;\r\n    return (\r\n      <section className=\"container\">\r\n        {isLoading ? \r\n          (\r\n            <div className=\"loader\">\r\n              <span className=\"loader_text\">Loading...</span>\r\n            </div>\r\n          ) : (\r\n            <div className=\"movies\">\r\n              { //배열이므로 {}를 추가해줘야한다.\r\n                movies.map(movie => \r\n                  <Movie\r\n                    key={movie.id}\r\n                    id={movie.id}\r\n                    year={movie.year}\r\n                    title={movie.title}\r\n                    summary={movie.summary}\r\n                    poster={movie.medium_cover_image}\r\n                    genres={movie.genres}\r\n                  />\r\n                )\r\n              }\r\n            </div>\r\n         )\r\n        }\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport \"./About.css\";\r\n\r\nfunction About(){\r\n    return(\r\n        <div className=\"about_container\">\r\n            <span>\r\n                “Freedom is the freedom to say that two plus two make four. If that is\r\n                granted, all else follows.”\r\n            </span>\r\n            <span>− George Orwell, 1984</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","import React from 'react';\r\n\r\nclass Detail extends React.Component {\r\n    \r\n    // 제일 먼저 실행되는 라이프 사이클\r\n    componentDidMount(){\r\n        const { location, history } = this.props;\r\n\r\n        //만약 입력해서 movie_detail로 가면 홈으로 보낸다\r\n        if(location.state === undefined){\r\n            history.push(\"/\");\r\n        }\r\n    }\r\n\r\n    // 그런데 render가 먼저 실행된다\r\n    render() {\r\n        const { location } = this.props;\r\n        if (location.state) {\r\n          return <span>{location.state.title}</span>;\r\n        } else {\r\n          return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default Detail;","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Navigation.css\";\r\n\r\nfunction Navigation(){\r\n    return(\r\n        // a가 아닌 Link를 써야 전체 새로고침이 안되고 바뀐 내용만 변경된다. \r\n        <div className=\"nav\">\r\n            <Link to=\"/\">Home</Link>\r\n            <Link to=\"/about\">About</Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\nimport { HashRouter, Route } from \"react-router-dom\";\nimport Home from \"./routes/Home\"\nimport About from \"./routes/About\"\nimport Detail from \"./routes/Detail\"\nimport Navigation from \"./components/Navigation\"\nimport \"./App.css\";\n\nfunction App(){\n  return (\n    <HashRouter>\n      <Navigation />\n      <Route path=\"/\" exact={true} component={Home} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/movie/:id\" component={Detail} />\n    </HashRouter>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n// ReactDOM : 라이브러리를 웹사이트에 출력해둠, 한 개의 컴포넌트를 출력(render)\n// document 안에 element가 있는데, element ID('root')는 인덱스 html 파일에 있음\n// application은 한번에 하나의 component만 출력할 수 있다\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}